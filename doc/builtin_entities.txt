# Builtin Entities
Minetest registers two entities by default: Falling nodes and dropped items.
This document describes how they behave and what you can do with them.

## Falling node (`__builtin:falling_node`)

This entity is created by `minetest.check_for_falling` in place of a node
with the special group `falling_node=1`. Falling nodes can also be created
artificially with `minetest.spawn_falling_node`.

Spawning a falling node with `/spawnentity` won't work.

Default behaviour:

* Falls down in a straight line (gravity = `movement_gravity` setting)
* It collides with `walkable` nodes and physical objects
* If falls through players
* If the node group `float=1` is set, it also collides with liquid nodes
* When it hits a solid (=`walkable`) node, it will try to place itself as a
  node, replacing the node above.
    * If the destination node is not `buildable_to`, the *destination node*
      drops as an item
    * If the destination node is a leveled node (`paramtype2="leveled"`),
      the level (=`param2`) of the destination node will be increased
      (sum of destination node's level and falling node's level)
    * If the falling node fails to place itself, it drops as an item

### Entity fields

* `set_node(self, node, meta)`: Call this function to set the node type that
  is falling. `node` and `meta` are explained below. The `meta` argument
  is optional.
* `node`: Node table of the node (`name`, `param1`, `param2`) that this
  entity represents. Read-only.
* `meta`: Node metadata of the falling node. Will be used when the falling
  nodes tries to place itself as a node. Read-only.

### Rendering / supported nodes

Falling nodes have visuals to look as close as possible to the original node.
This works for most drawtypes, but there are limitations.
Falling nodes use the `item` entity visual for most nodes.

Supported drawtypes:

* `normal`
* `signlike`
* `torchlike`
* `nodebox`
* `raillike`
* `glasslike`
* `glasslike_framed`
* `glasslike_framed_optional`
* `allfaces`
* `allfaces_optional`
* `firelike`
* `mesh`
* `fencelike`
* `liquid`
* `airlike` (not pointable)

Other drawtypes still kinda work, but they might look weird.

Supported `paramtype2` values:

* `wallmounted`
* `facedir`
* `colorwallmounted`
* `colorfacedir`
* `color`

## Dropped item stack (`__builtin:item`)

This is an item stack in a collectable form. Common cases that spawn a
dropped item:

* Item dropped by player
* The root node of a node with the group `attached_node=1` is removed
* `minetest.add_item` is called

Spawning this entity using `/spawnentity` will not work.

### Behavior

* Players will collect it by punching
* It will disappear after `item_entity_ttl` seconds after its creation
  (unless item timeout is disabled)
* It will slide on `slippery` nodes
* It is subject to gravity (uses `movement_gravity` setting)
* It collides with `walkable` nodes
* It does not collide physical objects
* When it's inside a solid (`walkable=true`) node, it tries to escape to a
  neighboring non-solid (`walkable=false`) node

### Entity fields

* `set_item(self, item)`: Function to initialize this entity to its
  representing `item` (type `ItemStack`).
* `age`: Age in seconds. When this exceeds `item_entity_ttl`, the entity
  is removed (unless item timeout is disabled)
* `itemstring`: Itemstring of the item that this item entity represents.
  Read-only.

Other fields are for internal use only.
